#pragma once

// To add characters or palette lists:
// * Update the SupportedPaletteListIndex with the new index name.
// * Add an array below along the lines of UMK3_A_LIUKANG_PALETTES_P1. 
// * Update every array using UMK3_A_NUMUNITS below
// That should be it.  Good luck.

const std::vector<uint16_t> UMK3_A_IMGIDS_USED =
{
    indexMK2ASprites_ShaoKahn,          // 0x7a
};

const sGame_PaletteDataset UMK3_A_LIUKANG_PALETTES_P1[] =
{
    { L"Liu Kang P1", 0xb188c, 0xb190c },
};

const sGame_PaletteDataset UMK3_A_LIUKANG_PALETTES_P2[] =
{
    { L"Liu Kang P2", 0xb190e, 0xb198e },
};

const sGame_PaletteDataset UMK3_A_KUNGLAO_PALETTES_P1[] =
{
    { L"Kung Lao P1", 0xb0bfe, 0xb0c7e },
};

const sGame_PaletteDataset UMK3_A_KUNGLAO_PALETTES_P2[] =
{
    { L"Kung Lao P2", 0xb0c80, 0xb0d00 },
};

const sGame_PaletteDataset UMK3_A_REPTILE_PALETTES_P1[] =
{
    { L"Reptile P1", 0xb6c34, 0xb6cb4 },
};

const sGame_PaletteDataset UMK3_A_REPTILE_PALETTES_P2[] =
{
    { L"Reptile P2", 0x619e8, 0x61a68 },
};

const sGame_PaletteDataset UMK3_A_SUBZERO_PALETTES_P1[] =
{
    { L"Sub-Zero P1", 0xb0328, 0xb03a8 },
};

const sGame_PaletteDataset UMK3_A_SUBZERO_PALETTES_P2[] =
{
    { L"Sub-Zero P2", 0xb03aa, 0xb042a },
};

const sGame_PaletteDataset UMK3_A_SHANGTSUNG_PALETTES_P1[] =
{
    { L"Shang Tsung P1", 0xb10be, 0xb113e },
};

const sGame_PaletteDataset UMK3_A_SHANGTSUNG_PALETTES_P2[] =
{
    { L"Shang Tsung P2", 0xb1140, 0xb11c0 },
};

const sGame_PaletteDataset UMK3_A_KITANA_PALETTES_P1[] =
{
    { L"Kitana P1", 0xb69a6, 0xb6a26 },
};

const sGame_PaletteDataset UMK3_A_KITANA_PALETTES_P2[] =
{
    { L"Kitana P2", 0x617e0, 0x61860 },
};

const sGame_PaletteDataset UMK3_A_JAX_PALETTES_P1[] =
{
    { L"Jax P1", 0xb00de, 0xb015e },
};

const sGame_PaletteDataset UMK3_A_JAX_PALETTES_P2[] =
{
    { L"Jax P2", 0xb0160, 0xb01e0 },
};

const sGame_PaletteDataset UMK3_A_MILEENA_PALETTES_P1[] =
{
    { L"Mileena P1", 0xb6a28, 0xb6aa8 },
};

const sGame_PaletteDataset UMK3_A_MILEENA_PALETTES_P2[] =
{
    { L"Mileena P2", 0x61862, 0x618e2 },
};

const sGame_PaletteDataset UMK3_A_SCORPION_PALETTES_P1[] =
{
    { L"Scorpion P1", 0xb6bb2, 0xb6c32 },
};

const sGame_PaletteDataset UMK3_A_SCORPION_PALETTES_P2[] =
{
    { L"Scorpion P2", 0x61966, 0x619e6 },
};

const sGame_PaletteDataset UMK3_A_SONYA_PALETTES_P1[] =
{
    { L"Sonya P1", 0xaff38, 0xaffb8 },
};

const sGame_PaletteDataset UMK3_A_SONYA_PALETTES_P2[] =
{
    { L"Sonya P2", 0xaffba, 0xb003a },
};

const sGame_PaletteDataset UMK3_A_NIGHTWOLF_PALETTES_P1[] =
{
    { L"Nightwolf P1", 0xb0268, 0xb02e8 },
};

const sGame_PaletteDataset UMK3_A_NIGHTWOLF_PALETTES_P2[] =
{
    { L"Nightwolf P2", 0x60dc6, 0x60e46 },
};

const sGame_PaletteDataset UMK3_A_JADE_PALETTES_P1[] =
{
    { L"Jade P1", 0xb6aaa, 0xb6b2a },
};

const sGame_PaletteDataset UMK3_A_JADE_PALETTES_P2[] =
{
    { L"Jade P2", 0x618e4, 0x61964 },
};

const sGame_PaletteDataset UMK3_A_KANO_PALETTES_P1[] =
{
    { L"Kano P1", 0xafe02, 0xafe82 },
};

const sGame_PaletteDataset UMK3_A_KANO_PALETTES_P2[] =
{
    { L"Kano P2", 0xafe84, 0xaff04 },
};

const sGame_PaletteDataset UMK3_A_ERMAC_PALETTES_P1[] =
{
    { L"Ermac P1", 0x60bbe, 0x60c3e },
};

const sGame_PaletteDataset UMK3_A_ERMAC_PALETTES_P2[] =
{
    { L"Ermac P2", 0x61a6a, 0x61aea },
};

const sGame_PaletteDataset UMK3_A_CLASSUB_PALETTES_P1[] =
{
    { L"Classic Sub-Zero P1", 0x60c40, 0x60cc0 },
};

const sGame_PaletteDataset UMK3_A_CLASSUB_PALETTES_P2[] =
{
    { L"Classic Sub-Zero P2", 0x61aec, 0x61b6c },
};

const sGame_PaletteDataset UMK3_A_SEKTOR_PALETTES_P1[] =
{
    { L"Sektor P1", 0xb07f8, 0xb0878 },
};

const sGame_PaletteDataset UMK3_A_SEKTOR_PALETTES_P2[] =
{
    { L"Sektor P2", 0xb087a, 0xb08fa },
};

const sGame_PaletteDataset UMK3_A_SINDEL_PALETTES_P1[] =
{
    { L"Sindel P1", 0xb061e, 0xb069e },
};

const sGame_PaletteDataset UMK3_A_SINDEL_PALETTES_P2[] =
{
    { L"Sindel P2", 0x60ec8, 0x60f48 },
};

const sGame_PaletteDataset UMK3_A_STRYKER_PALETTES_P1[] =
{
    { L"Stryker P1", 0xb04f2, 0xb0572 },
};

const sGame_PaletteDataset UMK3_A_STRYKER_PALETTES_P2[] =
{
    { L"Stryker P2", 0x60e48, 0x60ec8 },
};

const sGame_PaletteDataset UMK3_A_CYRAX_PALETTES_P1[] =
{
    { L"Cyrax P1", 0xb08fc, 0xb097c },
};

const sGame_PaletteDataset UMK3_A_CYRAX_PALETTES_P2[] =
{
    { L"Cyrax P2", 0xb097e, 0xb09fe },
};

const sGame_PaletteDataset UMK3_A_KABAL_PALETTES_P1[] =
{
    { L"Kabal P1", 0xb0da2, 0xb0e22 },
};

const sGame_PaletteDataset UMK3_A_KABAL_PALETTES_P2[] =
{
    { L"Kabal P2", 0xb0e24, 0xb0ea4 },
};

const sGame_PaletteDataset UMK3_A_SHEEVA_PALETTES_P1[] =
{
    { L"Sheeva P1", 0xb0f9a, 0xb101a },
};

const sGame_PaletteDataset UMK3_A_SHEEVA_PALETTES_P2[] =
{
    { L"Sheeva P2", 0xb101c, 0xb109c },
};

const sGame_PaletteDataset UMK3_A_SMOKE_PALETTES_P1[] =
{
    { L"Smoke P1", 0x60cc2, 0x60d42 },
};

const sGame_PaletteDataset UMK3_A_SMOKE_PALETTES_P2[] =
{
    { L"Smoke P2", 0x60d44, 0x60dc4 },
};

const sGame_PaletteDataset UMK3_A_SHAOKHAN_PALETTES[] =
{
    { L"Shao Kahn", 0xb1b86, 0xb1c06, indexMK2ASprites_ShaoKahn },
};

const sGame_PaletteDataset UMK3_A_HUMANSMOKE_PALETTES[] =
{
    { L"Human Smoke", 0x61b6e, 0x61bee },
};

const sGame_PaletteDataset UMK3_A_MOTARO_PALETTES[] =
{
    { L"Motaro", 0xb1a10, 0xb1a90 },
};

const sGame_PaletteDataset UMK3_A_NOOB_PALETTES[] =
{
    { L"Noob Saibot", 0x60b3c, 0x60bbc },
};

const sGame_PaletteDataset UMK3_A_RAIN_PALETTES[] =
{
    { L"Rain", 0x67658, 0x676d8 },
};

const sDescTreeNode UMK3_A_LIUKANG_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_LIUKANG_PALETTES_P1, ARRAYSIZE(UMK3_A_LIUKANG_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_LIUKANG_PALETTES_P2, ARRAYSIZE(UMK3_A_LIUKANG_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_KUNGLAO_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_KUNGLAO_PALETTES_P1, ARRAYSIZE(UMK3_A_KUNGLAO_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_KUNGLAO_PALETTES_P2, ARRAYSIZE(UMK3_A_KUNGLAO_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_REPTILE_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_REPTILE_PALETTES_P1, ARRAYSIZE(UMK3_A_REPTILE_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_REPTILE_PALETTES_P2, ARRAYSIZE(UMK3_A_REPTILE_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_SUBZERO_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_SUBZERO_PALETTES_P1, ARRAYSIZE(UMK3_A_SUBZERO_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_SUBZERO_PALETTES_P2, ARRAYSIZE(UMK3_A_SUBZERO_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_SHANGTSUNG_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_SHANGTSUNG_PALETTES_P1, ARRAYSIZE(UMK3_A_SHANGTSUNG_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_SHANGTSUNG_PALETTES_P2, ARRAYSIZE(UMK3_A_SHANGTSUNG_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_KITANA_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_KITANA_PALETTES_P1, ARRAYSIZE(UMK3_A_KITANA_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_KITANA_PALETTES_P2, ARRAYSIZE(UMK3_A_KITANA_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_JAX_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_JAX_PALETTES_P1, ARRAYSIZE(UMK3_A_JAX_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_JAX_PALETTES_P2, ARRAYSIZE(UMK3_A_JAX_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_MILEENA_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_MILEENA_PALETTES_P1, ARRAYSIZE(UMK3_A_MILEENA_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_MILEENA_PALETTES_P2, ARRAYSIZE(UMK3_A_MILEENA_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_SCORPION_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_SCORPION_PALETTES_P1, ARRAYSIZE(UMK3_A_SCORPION_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_SCORPION_PALETTES_P2, ARRAYSIZE(UMK3_A_SCORPION_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_SHAOKHAN_COLLECTION[] =
{
    { L"Palettes", DESC_NODETYPE_TREE, (void*)UMK3_A_SHAOKHAN_PALETTES, ARRAYSIZE(UMK3_A_SHAOKHAN_PALETTES) },
};

const sDescTreeNode UMK3_A_SMOKE_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_SMOKE_PALETTES_P1, ARRAYSIZE(UMK3_A_SMOKE_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_SMOKE_PALETTES_P2, ARRAYSIZE(UMK3_A_SMOKE_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_NOOB_COLLECTION[] =
{
    { L"Palettes", DESC_NODETYPE_TREE, (void*)UMK3_A_NOOB_PALETTES, ARRAYSIZE(UMK3_A_NOOB_PALETTES) },
};

const sDescTreeNode UMK3_A_MOTARO_COLLECTION[] =
{
    { L"Palettes", DESC_NODETYPE_TREE, (void*)UMK3_A_MOTARO_PALETTES, ARRAYSIZE(UMK3_A_MOTARO_PALETTES) },
};

const sDescTreeNode UMK3_A_JADE_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_JADE_PALETTES_P1, ARRAYSIZE(UMK3_A_JADE_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_JADE_PALETTES_P2, ARRAYSIZE(UMK3_A_JADE_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_SONYA_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_SONYA_PALETTES_P1, ARRAYSIZE(UMK3_A_SONYA_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_SONYA_PALETTES_P2, ARRAYSIZE(UMK3_A_SONYA_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_NIGHTWOLF_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_NIGHTWOLF_PALETTES_P1, ARRAYSIZE(UMK3_A_NIGHTWOLF_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_NIGHTWOLF_PALETTES_P2, ARRAYSIZE(UMK3_A_NIGHTWOLF_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_RAIN_COLLECTION[] =
{
    { L"Palettes", DESC_NODETYPE_TREE, (void*)UMK3_A_RAIN_PALETTES, ARRAYSIZE(UMK3_A_RAIN_PALETTES) },
};

const sDescTreeNode UMK3_A_KANO_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_KANO_PALETTES_P1, ARRAYSIZE(UMK3_A_KANO_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_KANO_PALETTES_P2, ARRAYSIZE(UMK3_A_KANO_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_ERMAC_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_ERMAC_PALETTES_P1, ARRAYSIZE(UMK3_A_ERMAC_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_ERMAC_PALETTES_P2, ARRAYSIZE(UMK3_A_ERMAC_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_SEKTOR_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_SEKTOR_PALETTES_P1, ARRAYSIZE(UMK3_A_SEKTOR_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_SEKTOR_PALETTES_P2, ARRAYSIZE(UMK3_A_SEKTOR_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_SINDEL_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_SINDEL_PALETTES_P1, ARRAYSIZE(UMK3_A_SINDEL_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_SINDEL_PALETTES_P2, ARRAYSIZE(UMK3_A_SINDEL_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_STRYKER_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_STRYKER_PALETTES_P1, ARRAYSIZE(UMK3_A_STRYKER_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_STRYKER_PALETTES_P2, ARRAYSIZE(UMK3_A_STRYKER_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_CYRAX_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_CYRAX_PALETTES_P1, ARRAYSIZE(UMK3_A_CYRAX_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_CYRAX_PALETTES_P2, ARRAYSIZE(UMK3_A_CYRAX_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_KABAL_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_KABAL_PALETTES_P1, ARRAYSIZE(UMK3_A_KABAL_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_KABAL_PALETTES_P2, ARRAYSIZE(UMK3_A_KABAL_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_SHEEVA_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_SHEEVA_PALETTES_P1, ARRAYSIZE(UMK3_A_SHEEVA_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_SHEEVA_PALETTES_P2, ARRAYSIZE(UMK3_A_SHEEVA_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_HUMSMOKE_COLLECTION[] =
{
    { L"Palettes", DESC_NODETYPE_TREE, (void*)UMK3_A_HUMANSMOKE_PALETTES, ARRAYSIZE(UMK3_A_HUMANSMOKE_PALETTES) },
};

const sDescTreeNode UMK3_A_CLASSUB_COLLECTION[] =
{
    { L"P1", DESC_NODETYPE_TREE, (void*)UMK3_A_CLASSUB_PALETTES_P1, ARRAYSIZE(UMK3_A_CLASSUB_PALETTES_P1) },
    { L"P2", DESC_NODETYPE_TREE, (void*)UMK3_A_CLASSUB_PALETTES_P2, ARRAYSIZE(UMK3_A_CLASSUB_PALETTES_P2) },
};

const sDescTreeNode UMK3_A_UNITS[] =
{
    { L"Kitana", DESC_NODETYPE_TREE, (void*)UMK3_A_KITANA_COLLECTION, ARRAYSIZE(UMK3_A_KITANA_COLLECTION) },
    { L"Reptile", DESC_NODETYPE_TREE, (void*)UMK3_A_REPTILE_COLLECTION, ARRAYSIZE(UMK3_A_REPTILE_COLLECTION) },
    { L"Sonya", DESC_NODETYPE_TREE, (void*)UMK3_A_SONYA_COLLECTION, ARRAYSIZE(UMK3_A_SONYA_COLLECTION) },
    { L"Jax", DESC_NODETYPE_TREE, (void*)UMK3_A_JAX_COLLECTION, ARRAYSIZE(UMK3_A_JAX_COLLECTION) },
    { L"Nightwolf", DESC_NODETYPE_TREE, (void*)UMK3_A_NIGHTWOLF_COLLECTION, ARRAYSIZE(UMK3_A_NIGHTWOLF_COLLECTION) },
    { L"Jade", DESC_NODETYPE_TREE, (void*)UMK3_A_JADE_COLLECTION, ARRAYSIZE(UMK3_A_JADE_COLLECTION) },
    { L"Scorpion", DESC_NODETYPE_TREE, (void*)UMK3_A_SCORPION_COLLECTION, ARRAYSIZE(UMK3_A_SCORPION_COLLECTION) },
    { L"Kano", DESC_NODETYPE_TREE, (void*)UMK3_A_KANO_COLLECTION, ARRAYSIZE(UMK3_A_KANO_COLLECTION) },
    { L"Sub-Zero", DESC_NODETYPE_TREE, (void*)UMK3_A_SUBZERO_COLLECTION, ARRAYSIZE(UMK3_A_SUBZERO_COLLECTION) },
    { L"Sektor", DESC_NODETYPE_TREE, (void*)UMK3_A_SEKTOR_COLLECTION, ARRAYSIZE(UMK3_A_SEKTOR_COLLECTION) },
    { L"Sindel", DESC_NODETYPE_TREE, (void*)UMK3_A_SINDEL_COLLECTION, ARRAYSIZE(UMK3_A_SINDEL_COLLECTION) },
    { L"Stryker", DESC_NODETYPE_TREE, (void*)UMK3_A_STRYKER_COLLECTION, ARRAYSIZE(UMK3_A_STRYKER_COLLECTION) },
    { L"Cyrax", DESC_NODETYPE_TREE, (void*)UMK3_A_CYRAX_COLLECTION, ARRAYSIZE(UMK3_A_CYRAX_COLLECTION) },
    { L"Kung Lao", DESC_NODETYPE_TREE, (void*)UMK3_A_KUNGLAO_COLLECTION, ARRAYSIZE(UMK3_A_KUNGLAO_COLLECTION) },
    { L"Kabal", DESC_NODETYPE_TREE, (void*)UMK3_A_KABAL_COLLECTION, ARRAYSIZE(UMK3_A_KABAL_COLLECTION) },
    { L"Sheeva", DESC_NODETYPE_TREE, (void*)UMK3_A_SHEEVA_COLLECTION, ARRAYSIZE(UMK3_A_SHEEVA_COLLECTION) },
    { L"Shang Tsung", DESC_NODETYPE_TREE, (void*)UMK3_A_SHANGTSUNG_COLLECTION, ARRAYSIZE(UMK3_A_SHANGTSUNG_COLLECTION) },
    { L"Liu Kang", DESC_NODETYPE_TREE, (void*)UMK3_A_LIUKANG_COLLECTION, ARRAYSIZE(UMK3_A_LIUKANG_COLLECTION) },
    { L"Smoke", DESC_NODETYPE_TREE, (void*)UMK3_A_SMOKE_COLLECTION, ARRAYSIZE(UMK3_A_SMOKE_COLLECTION) },
    { L"Human Smoke", DESC_NODETYPE_TREE, (void*)UMK3_A_HUMSMOKE_COLLECTION, ARRAYSIZE(UMK3_A_HUMSMOKE_COLLECTION) },

    { L"Classic Sub-Zero", DESC_NODETYPE_TREE, (void*)UMK3_A_CLASSUB_COLLECTION, ARRAYSIZE(UMK3_A_CLASSUB_COLLECTION) },
    { L"Ermac", DESC_NODETYPE_TREE, (void*)UMK3_A_ERMAC_COLLECTION, ARRAYSIZE(UMK3_A_ERMAC_COLLECTION) },
    { L"Mileena", DESC_NODETYPE_TREE, (void*)UMK3_A_MILEENA_COLLECTION, ARRAYSIZE(UMK3_A_MILEENA_COLLECTION) },
    
    { L"Motaro", DESC_NODETYPE_TREE, (void*)UMK3_A_MOTARO_COLLECTION, ARRAYSIZE(UMK3_A_MOTARO_COLLECTION) },
    { L"Shao Khan", DESC_NODETYPE_TREE, (void*)UMK3_A_SHAOKHAN_COLLECTION, ARRAYSIZE(UMK3_A_SHAOKHAN_COLLECTION) },

    { L"Noob Saibot", DESC_NODETYPE_TREE, (void*)UMK3_A_NOOB_COLLECTION, ARRAYSIZE(UMK3_A_NOOB_COLLECTION) },
    { L"Rain", DESC_NODETYPE_TREE, (void*)UMK3_A_RAIN_COLLECTION, ARRAYSIZE(UMK3_A_RAIN_COLLECTION) },
};
